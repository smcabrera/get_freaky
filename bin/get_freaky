#!/usr/bin/env ruby

#require 'rubygems' # I read somewhere that I shouldn't need this--I'll leave it commented for now just in case
require 'commander/import'
#require 'get_freaky'
require_relative '../lib/get_freaky'

program :name, "get_freaky"
program :version, GetFreaky::VERSION
program :description, Info::DESCRIPTION
program :help, 'Author', 'Stephen Mariano Cabrera <smcabrera.github.io>'
program :help, 'Version', "#{GetFreaky::VERSION} #{GetFreaky::DATE}"

command :conf do |c|
  c.syntax = 'get_freaky conf NAME [options]'
  c.summary = 'Displays information about a conference'
  c.description = c.summary # Because we're lazy
  c.example 'List information about the GORUCO conference', 'get_freaky conf GORUCO'
  c.action do |args, options|
    if ! args[0]
      puts `get_freaky conf --help`
    else
      conf = Conference.find(args[0])
      if conf.name == "Not Found"
        puts "Sorry, there was no conference found by that name."
      else
        events = conf.event_list
        event_title = choose("Choose an event you'd like to see more information about it:\n\n", *events)
        event = Event.find(event_title)
        puts event
      end
    end
  end
end

command :conf_all do |c|
  c.syntax = 'get_freaky conf_all'
  c.summary = 'Displays names of all conferences'
  c.description = c.summary # Because we're lazy
  c.example 'List names of all conferences', 'get_freaky conf_all'
  c.action do |args|
    if args[0]
      puts `get_freaky conf_all --help`
    else
      conferences = Conference.all
      puts conferences
    end
  end
end

command :event do |c|
  c.syntax = 'get_freaky event NAME [options]'
  #c.summary = 'Displays information about an event (an instance of a conference in a particular year)'
  c.summary = 'Shows the videos available from confreaks for an event (an instance of a conference in a particular year)'
  c.description = c.summary
  c.example 'Display information about the railsberry2013', 'get_freaky event railsberry2013'
  c.example 'Download all the videos from railsberry2013', 'get_freaky event railsberry2013 --all'
  c.action do |args, options|

    unless args[0]
      puts `get_freaky conf --help`
    else
      event = Event.find(args[0])
      if options.include "all"
        event.download_all_videos!
        break
      end
      videos = event.video_list
      video_title = choose("Choose a talk to see more information about it:\n\n", *videos)
      video = Video.find(event.name, video_title)
      puts video
      ask_to_download(video)
    end
  end
end

command :download_event do |c|
  c.syntax = 'get_freaky download_event EVENT_NAME [options]'
  c.summary = 'Downloads all the confreaks videos for a particular event'
  c.description = c.summary
  c.example 'Download all the videos from RubyConf 2015', 'get_freaky download_event rubyconf2015'
  c.action do |args, options|
    event = Event.find(args[0])
    event.download_all_videos!
  end
end


command :download do |c|
  c.syntax = 'get_freaky download VIDEO_NAME EVENT_NAME [options]'
  c.summary = 'Downloads a confreaks video locally using the viddl-rb library. Note that the "event name" given needs to be formatted in the same way as the listing show by the "event" command. Be sure to put quotes around video titles of multiple words and escape special exclamation points'
  c.description = c.summary
  c.example 'Download "The Future of Online Learning" from Railsberry 2013', 'get_freaky download "The Future of Online Learning" railsberry2013'
  c.example 'Download "Sleep!" from Railsberry 2013', 'get_freaky download Sleep! railsberry2013'
  c.action do |args, options|
    if args[0] == "featured"
      video = Video.find_featured
      puts video
      ask_to_download(video, options.download)
    else
      video_title = args[0]
      event = Event.find(args[1])
      event_short_code = event.short_code
      video = Video.find(event_short_code, video_title)
    end
    puts video.download
  end
end

command :featured do |c|
  c.syntax = 'get_freaky featured [options]'
  #c.summary = 'Displays information about an event (an instance of a conference in a particular year)'
  c.summary = 'Shows information on the  "featured video" on confreaks.tv'
  c.description = c.summary
  c.example 'Show the current featured video on confreaks.tv', 'get_freaky featured'
  c.option '--download', 'Automatically download the video without being prompted'
  c.action do |args, options|
    video = Video.find_featured
    puts video
    ask_to_download(video, options.download)
  end
end

def ask_to_download(video, download_option = false)
  unless download_option
    puts agree(Paint["\nWould you like to download this video? (y/n)", :blue]) ? video.download : %Q(Okay. Here's the link if you change your mind \n#{video.url})
  else
    puts "\nDownloading automatically with viddl-rb...\n"
    video.download
  end
end

default_command :help
